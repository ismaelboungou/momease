/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommunityForumListRelationFilter } from "../../communityForum/base/CommunityForumListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EventListRelationFilter } from "../../event/base/EventListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { LocationListRelationFilter } from "../../location/base/LocationListRelationFilter";
import { MilestoneListRelationFilter } from "../../milestone/base/MilestoneListRelationFilter";
import { ParentingTipListRelationFilter } from "../../parentingTip/base/ParentingTipListRelationFilter";
import { ProductReviewListRelationFilter } from "../../productReview/base/ProductReviewListRelationFilter";
import { ResourceListRelationFilter } from "../../resource/base/ResourceListRelationFilter";
import { UserProfileListRelationFilter } from "../../userProfile/base/UserProfileListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => CommunityForumListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommunityForumListRelationFilter)
  @IsOptional()
  @Field(() => CommunityForumListRelationFilter, {
    nullable: true,
  })
  communityForums?: CommunityForumListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventListRelationFilter)
  @IsOptional()
  @Field(() => EventListRelationFilter, {
    nullable: true,
  })
  events?: EventListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  joinedDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LocationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LocationListRelationFilter)
  @IsOptional()
  @Field(() => LocationListRelationFilter, {
    nullable: true,
  })
  locations?: LocationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MilestoneListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MilestoneListRelationFilter)
  @IsOptional()
  @Field(() => MilestoneListRelationFilter, {
    nullable: true,
  })
  milestones?: MilestoneListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ParentingTipListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ParentingTipListRelationFilter)
  @IsOptional()
  @Field(() => ParentingTipListRelationFilter, {
    nullable: true,
  })
  parentingTips?: ParentingTipListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProductReviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProductReviewListRelationFilter)
  @IsOptional()
  @Field(() => ProductReviewListRelationFilter, {
    nullable: true,
  })
  productReviews?: ProductReviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ResourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResourceListRelationFilter)
  @IsOptional()
  @Field(() => ResourceListRelationFilter, {
    nullable: true,
  })
  resources?: ResourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserProfileListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserProfileListRelationFilter)
  @IsOptional()
  @Field(() => UserProfileListRelationFilter, {
    nullable: true,
  })
  userProfiles?: UserProfileListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
