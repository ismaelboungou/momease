/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CommunityForum as PrismaCommunityForum,
  User as PrismaUser,
} from "@prisma/client";

export class CommunityForumServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CommunityForumCountArgs, "select">
  ): Promise<number> {
    return this.prisma.communityForum.count(args);
  }

  async communityForums(
    args: Prisma.CommunityForumFindManyArgs
  ): Promise<PrismaCommunityForum[]> {
    return this.prisma.communityForum.findMany(args);
  }
  async communityForum(
    args: Prisma.CommunityForumFindUniqueArgs
  ): Promise<PrismaCommunityForum | null> {
    return this.prisma.communityForum.findUnique(args);
  }
  async createCommunityForum(
    args: Prisma.CommunityForumCreateArgs
  ): Promise<PrismaCommunityForum> {
    return this.prisma.communityForum.create(args);
  }
  async updateCommunityForum(
    args: Prisma.CommunityForumUpdateArgs
  ): Promise<PrismaCommunityForum> {
    return this.prisma.communityForum.update(args);
  }
  async deleteCommunityForum(
    args: Prisma.CommunityForumDeleteArgs
  ): Promise<PrismaCommunityForum> {
    return this.prisma.communityForum.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.communityForum
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
