/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommunityForum } from "../../communityForum/base/CommunityForum";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Event } from "../../event/base/Event";
import { Location } from "../../location/base/Location";
import { Milestone } from "../../milestone/base/Milestone";
import { ParentingTip } from "../../parentingTip/base/ParentingTip";
import { ProductReview } from "../../productReview/base/ProductReview";
import { Resource } from "../../resource/base/Resource";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { UserProfile } from "../../userProfile/base/UserProfile";

@ObjectType()
class User {
  @ApiProperty({
    required: false,
    type: () => [CommunityForum],
  })
  @ValidateNested()
  @Type(() => CommunityForum)
  @IsOptional()
  communityForums?: Array<CommunityForum>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Event],
  })
  @ValidateNested()
  @Type(() => Event)
  @IsOptional()
  events?: Array<Event>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  joinedDate!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Location],
  })
  @ValidateNested()
  @Type(() => Location)
  @IsOptional()
  locations?: Array<Location>;

  @ApiProperty({
    required: false,
    type: () => [Milestone],
  })
  @ValidateNested()
  @Type(() => Milestone)
  @IsOptional()
  milestones?: Array<Milestone>;

  @ApiProperty({
    required: false,
    type: () => [ParentingTip],
  })
  @ValidateNested()
  @Type(() => ParentingTip)
  @IsOptional()
  parentingTips?: Array<ParentingTip>;

  @ApiProperty({
    required: false,
    type: () => [ProductReview],
  })
  @ValidateNested()
  @Type(() => ProductReview)
  @IsOptional()
  productReviews?: Array<ProductReview>;

  @ApiProperty({
    required: false,
    type: () => [Resource],
  })
  @ValidateNested()
  @Type(() => Resource)
  @IsOptional()
  resources?: Array<Resource>;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: () => [UserProfile],
  })
  @ValidateNested()
  @Type(() => UserProfile)
  @IsOptional()
  userProfiles?: Array<UserProfile>;
}

export { User as User };
